version: "3.8"

services:
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`hnmedia.account`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.routers.app.middlewares=app-https-redirect"
      - "traefik.http.middlewares.app-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.app-secure.rule=Host(`hnmedia.account`)"
      - "traefik.http.routers.app-secure.entrypoints=websecure"
      - "traefik.http.routers.app-secure.tls=true"
      - "traefik.http.routers.app-secure.tls.certresolver=myresolver"
      - "traefik.http.services.app.loadbalancer.server.port=5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - JWT_SECRET=toanvu
      - CRYPTO_SECRET=toanvu
      - MONGODB_URI=mongodb://huyvu:huyvu@ac-asssvbo-shard-00-00.qibg6np.mongodb.net:27017,ac-asssvbo-shard-00-01.qibg6np.mongodb.net:27017,ac-asssvbo-shard-00-02.qibg6np.mongodb.net:27017/?replicaSet=atlas-z80xvu-shard-0&ssl=true&authSource=admin&retryWrites=true&w=majority&appName=Cluster0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=your_secure_redis_password # Mật khẩu Redis cho bảo mật
    restart: unless-stopped
    volumes:
      - app-cache:/app/cache
    depends_on:
      - redis # Đảm bảo Redis chạy trước app
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass your_secure_redis_password --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  redis-data:
    name: redis-data
  app-cache:
    name: app-cache

networks:
  app-network:
    driver: bridge
